#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

if [ ! -e .fonctions ]; then
	# Get file fonction if not been to the current directory
	sudo cp ../settings/scripts/.fonctions ./.fonctions
	sudo chmod a+rx .fonctions
fi
# Loads the generic functions usually used in the script
source .fonctions
# Source app helpers
source /usr/share/yunohost/helpers

# The parameter $app is the id of the app instance ex: ynhexample__2
#REMOVEME? app=$YNH_APP_INSTANCE_NAME

# Get old parameter of the app
#REMOVEME? domain=$(ynh_app_setting_get $app domain)
#REMOVEME? path=$(ynh_app_setting_get $app path)
#REMOVEME? #REMOVEME? is_public=$(ynh_app_setting_get $app is_public)

# Check domain/path availability
sudo yunohost app checkurl "${domain}${path}" -a "$app" \
    || ynh_die "Path not available: ${domain}${path}"

# Check $install_dir
#REMOVEME? install_dir="/opt/${app}"
if [ -d $install_dir ]; then
	ynh_die "There is already a directory: $install_dir"
fi

# Check configuration files nginx
nginx_conf="/etc/nginx/conf.d/${domain}.d/${app}.conf"
if [ -f $nginx_conf ]; then
	ynh_die "The NGINX configuration already exists at '${nginx_conf}'. 
	You should safely delete it before restoring this app."
fi

# Restore uwsgi
uwsgi="/etc/uwsgi/apps-enabled/${app}.uwsgi.ini"
if [ -f "${uwsgi}" ]; then
	ynh_die "The UWSGI configuration already exists at '${uwsgi}'. 
	You should safely delete it before restoring this app."
fi

# Create user unix
sudo useradd -N $app -d /opt/$app/

 # Restore sources & data
sudo cp -a ./sources "$install_dir"

# Set permissions
sudo chown -R $app: "$install_dir"

pushd $install_dir

# Create role and database with a password
#REMOVEME? ynh_psql_setup_db $app $app

# Restore db
sudo --login --user=postgres psql -d ${db} -i $YNH_APP_BACKUP_DIR/umap_db.sql

popd

# Create symlink for uwsgi
sudo mkdir -p /etc/uwsgi/apps-enabled || true
sudo ln -s $install_dir/uwsgi.ini /etc/uwsgi/apps-enabled/umap.uwsgi.ini || true

# Restore nginx configuration files
sudo cp -a ./nginx.conf   "$nginx_conf"

# Start service
sudo systemctl enable uwsgi
sudo systemctl restart uwsgi

# Add umap.uwsgi as a service
sudo yunohost service add umap.uwsgi

# Set ssowat config
#REMOVEME? if [[ $is_public -eq 0 ]]; then
	ynh_app_setting_delete $app unprotected_uris
	sudo yunohost app ssowatconf
fi

# Reload ssowat
sudo yunohost app ssowatconf

# Reload Nginx
sudo systemctl reload nginx
