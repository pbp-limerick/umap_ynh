#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

source _common.sh	# Loads the generic functions usually used in the script
source /usr/share/yunohost/helpers # Source app helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

# Retrieve arguments
#REMOVEME? domain=$YNH_APP_ARG_DOMAIN
#REMOVEME? path=$YNH_APP_ARG_PATH
#REMOVEME? admin=$YNH_APP_ARG_ADMIN
#REMOVEME? language=$YNH_APP_ARG_LANGUAGE
#REMOVEME? is_public=$YNH_APP_ARG_IS_PUBLIC
#REMOVEME? github_key=$YNH_APP_ARG_GITHUB_KEY
#REMOVEME? github_secret=$YNH_APP_ARG_GITHUB_SECRET
#REMOVEME? github_scope=$YNH_APP_ARG_GITHUB_SCOPE
#REMOVEME? bitbucket_key=$YNH_APP_ARG_BITBUCKET_KEY
#REMOVEME? bitbucket_secret=$YNH_APP_ARG_BITBUCKET_SECRET
#REMOVEME? twitter_key=$YNH_APP_ARG_TWITTER_KEY
#REMOVEME? twitter_secret=$YNH_APP_ARG_TWITTER_SECRET
#REMOVEME? openstreetmap_key=$YNH_APP_ARG_OPENSTREETMAP_KEY
#REMOVEME? openstreetmap_secret=$YNH_APP_ARG_OPENSTREETMAP_SECRET

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

ynh_user_exists "$admin" || ynh_die "user $admin does not exist"

#REMOVEME? install_dir=/var/www/$app
#REMOVEME? test ! -e "$install_dir" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path=$(ynh_normalize_url_path $path)

# Check web path availability
#REMOVEME? ynh_webpath_available $domain $path
# Register (book) web path
#REMOVEME? ynh_webpath_register $app $domain $path

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

#REMOVEME? ynh_app_setting_set $app domain $domain
#REMOVEME? ynh_app_setting_set $app path $path
#REMOVEME? ynh_app_setting_set $app admin $admin
ynh_app_setting_set $app language $language
#REMOVEME? ynh_app_setting_set $app is_public $is_public

#=================================================
# STANDARD MODIFICATIONS
#=================================================

# Install dependency to convert tracks to a readable format for the browser
ynh_package_update
ynh_package_install postgresql postgresql-server-dev-13 postgis postgresql-13-postgis-3 python3-pip git python3-virtualenv virtualenvwrapper python3-dev python3-setuptools libtiff5-dev libjpeg62-turbo-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk python3.9-dev python-dev python3-pil postgresql-13-postgis-scripts

# Prepare Umap to be installed
sudo mkdir -p /opt/$app
sudo useradd -N $app -d /opt/$app/

# Create role and database with a password
#REMOVEME? ynh_psql_setup_db $app $app

# Activate PostGIS extension
ynh_psql_create_extension $app postgis

sudo mkdir -p $install_dir/venv
sudo chown -R umap: $install_dir

# Installation de "umap"
sudo su $app -c "virtualenv -p /usr/bin/python3 --distribute --no-site-packages ${install_dir}/venv"
sudo bash -c "source ${install_dir}/venv/bin/activate && pip3 install umap-project && pip3 install uwsgi"

localfile="${install_dir}/venv/local.py"
sudo bash -c "source ${install_dir}/venv/bin/activate && wget https://raw.githubusercontent.com/umap-project/umap/master/umap/settings/local.py.sample -O ${localfile}"

# Replace variables configuration 
secret=$(ynh_string_random 24)
language="$(echo $language | head -c 2)"
ynh_replace_config_umap

# Create STATIC & MEDIA dir
sudo mkdir "${install_dir}/static"
sudo mkdir "${install_dir}/data"

# export env
# sudo bash -c "source ${install_dir}/venv/bin/activate && env = UMAP_SETTINGS=${install_dir}/venv/local.py"

# Install umap
sudo bash -c "source ${install_dir}/venv/bin/activate && export UMAP_SETTINGS=${localfile} && umap migrate && echo yes | umap collectstatic && umap storagei18n"
# Create superuser
sudo bash -c "source ${install_dir}/venv/bin/activate && export UMAP_SETTINGS=${localfile} && umap createsuperuser --username ${admin} --email ${admin}@${domain} --noinput"

# Create datalayer directory
sudo mkdir /opt/umap/data/datalayer
sudo chown -R umap:users /opt/umap/data/datalayer

# Copy Files
sudo cp ../conf/uwsgi_params $install_dir/uwsgi_params
sudo cp ../conf/uwsgi.ini $install_dir/uwsgi.ini
sudo sed -i "s@__APP__@$app@g" $install_dir/uwsgi.ini

# Config service
sudo mkdir -p /etc/uwsgi/apps-enabled/
sudo ln -s $install_dir/uwsgi.ini /etc/uwsgi/apps-enabled/umap.uwsgi.ini

# Start service
sudo systemctl enable uwsgi
sudo systemctl restart uwsgi

# Add umap.uwsgi as a service
sudo yunohost service add umap.uwsgi

# Modify Nginx configuration file and copy it to Nginx conf directory
ynh_nginx_config

# Set ssowat config
#REMOVEME? if [ $is_public -eq 0 ]
then
	ynh_app_setting_delete $app skipped_uris # Delete public access
fi

#REMOVEME? if [ $is_public -eq 1 ]
then
	ynh_app_setting_set $app skipped_uris "/" # Make app public if necessary
fi

# Reload nginx
sudo systemctl reload nginx
